<?php
$topdir = "../../../..";
# Note that we must use the PHP "$$" indirection to assign to the
# "title" variable, because if we list "$ title" (without the space)
# in this file, Doxygen will replace it with a string title.
$ver = basename(getcwd());
$thwarting_doxygen_preprocessor = "title";
$$thwarting_doxygen_preprocessor = "Portable Hardware Locality (hwloc) Documentation: $ver";
$header_include_file = "$topdir/projects/hwloc/doc/$ver/www.open-mpi.org-css.inc";
include_once("$topdir/projects/hwloc/nav.inc");
include_once("$topdir/includes/header.inc");
include_once("$topdir/includes/code.inc");
?>
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.php">include</a></li><li class="navelem"><a class="el" href="dir_5cb306d949c7931a3b6c77517393dd34.php">hwloc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">opencl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment"> * Copyright © 2012-2023 Inria.  All rights reserved.</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment"> * Copyright © 2013, 2018 Université Bordeaux.  All right reserved.</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"> * See COPYING in top-level directory.</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment"> */</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="preprocessor">#ifndef HWLOC_OPENCL_H</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="preprocessor">#define HWLOC_OPENCL_H</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="preprocessor">#include &quot;hwloc.h&quot;</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="preprocessor">#include &quot;hwloc/autogen/config.h&quot;</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="preprocessor">#include &quot;hwloc/helper.h&quot;</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="preprocessor">#ifdef HWLOC_LINUX_SYS</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="preprocessor">#include &quot;hwloc/linux.h&quot;</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="preprocessor">#ifdef __APPLE__</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="preprocessor">#include &lt;OpenCL/cl.h&gt;</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="preprocessor">#include &lt;CL/cl.h&gt;</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="comment">/* OpenCL extensions aren&#39;t always shipped with default headers, and</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="comment"> * they don&#39;t always reflect what the installed implementations support.</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="comment"> * Try everything and let the implementation return errors when non supported.</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="comment"> */</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="comment">/* Copyright (c) 2008-2018 The Khronos Group Inc. */</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="comment">/* needs &quot;cl_khr_pci_bus_info&quot; device extension, but not strictly required for clGetDeviceInfo() */</span></div>
<div class="foldopen" id="foldopen00045" data-start="{" data-end="};">
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="a00280.php">   45</a></span><span class="keyword">typedef</span> <span class="keyword">struct </span>{</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="a00280.php#a5bdfbcb0dee610f9f6f7f95ace89e298">   46</a></span>    cl_uint <a class="code hl_variable" href="a00280.php#a5bdfbcb0dee610f9f6f7f95ace89e298">pci_domain</a>;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno"><a class="line" href="a00280.php#a0e4d316b01eee00c3750d1c853be9c01">   47</a></span>    cl_uint <a class="code hl_variable" href="a00280.php#a0e4d316b01eee00c3750d1c853be9c01">pci_bus</a>;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno"><a class="line" href="a00280.php#a328717bdaeb2d117c550927cf41e6f72">   48</a></span>    cl_uint <a class="code hl_variable" href="a00280.php#a328717bdaeb2d117c550927cf41e6f72">pci_device</a>;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="a00280.php#ab4032f46a44cf9ffc7b2ddc25001e3f0">   49</a></span>    cl_uint <a class="code hl_variable" href="a00280.php#ab4032f46a44cf9ffc7b2ddc25001e3f0">pci_function</a>;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>} <a class="code hl_struct" href="a00280.php">hwloc_cl_device_pci_bus_info_khr</a>;</div>
</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#define HWLOC_CL_DEVICE_PCI_BUS_INFO_KHR 0x410F</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="comment">/* needs &quot;cl_amd_device_attribute_query&quot; device extension, but not strictly required for clGetDeviceInfo() */</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span><span class="preprocessor">#define HWLOC_CL_DEVICE_TOPOLOGY_AMD 0x4037</span></div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="};">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="a00284.php">   55</a></span><span class="keyword">typedef</span> <span class="keyword">union </span>{</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="a00284.php#afbd6b814607b06fc5b2f36ad14420398">   56</a></span>    <span class="keyword">struct </span>{ cl_uint type; cl_uint data[5]; } raw;</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno"><a class="line" href="a00284.php#a4a23e3cc034b7ab105cab0e863dcab69">   57</a></span>    <span class="keyword">struct </span>{ cl_uint type; cl_char unused[17]; cl_char <a class="code hl_variable" href="a00284.php#a4a23e3cc034b7ab105cab0e863dcab69">bus</a>; cl_char device; cl_char function; } pcie;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>} <a class="code hl_union" href="a00284.php">hwloc_cl_device_topology_amd</a>;</div>
</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span><span class="preprocessor">#define HWLOC_CL_DEVICE_TOPOLOGY_TYPE_PCIE_AMD 1</span></div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="comment">/* needs &quot;cl_nv_device_attribute_query&quot; device extension, but not strictly required for clGetDeviceInfo() */</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="preprocessor">#define HWLOC_CL_DEVICE_PCI_BUS_ID_NV 0x4008</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span><span class="preprocessor">#define HWLOC_CL_DEVICE_PCI_SLOT_ID_NV 0x4009</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="preprocessor">#define HWLOC_CL_DEVICE_PCI_DOMAIN_ID_NV 0x400A</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span><span class="keyword">static</span> __hwloc_inline <span class="keywordtype">int</span></div>
<div class="foldopen" id="foldopen00086" data-start="{" data-end="}">
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="a00176.php#gab89e4d20f8a353299351b41849e35ac9">   86</a></span><a class="code hl_function" href="a00176.php#gab89e4d20f8a353299351b41849e35ac9">hwloc_opencl_get_device_pci_busid</a>(cl_device_id device,</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>                               <span class="keywordtype">unsigned</span> *domain, <span class="keywordtype">unsigned</span> *bus, <span class="keywordtype">unsigned</span> *dev, <span class="keywordtype">unsigned</span> *func)</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>{</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>        <a class="code hl_union" href="a00284.php">hwloc_cl_device_topology_amd</a> amdtopo;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>        <a class="code hl_struct" href="a00280.php">hwloc_cl_device_pci_bus_info_khr</a> khrbusinfo;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>        cl_uint nvbus, nvslot, nvdomain;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>        cl_int clret;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>        clret = clGetDeviceInfo(device, HWLOC_CL_DEVICE_PCI_BUS_INFO_KHR, <span class="keyword">sizeof</span>(khrbusinfo), &amp;khrbusinfo, NULL);</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>        <span class="keywordflow">if</span> (CL_SUCCESS == clret) {</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>                *domain = (unsigned) khrbusinfo.<a class="code hl_variable" href="a00280.php#a5bdfbcb0dee610f9f6f7f95ace89e298">pci_domain</a>;</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>                *bus = (unsigned) khrbusinfo.<a class="code hl_variable" href="a00280.php#a0e4d316b01eee00c3750d1c853be9c01">pci_bus</a>;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>                *dev = (unsigned) khrbusinfo.<a class="code hl_variable" href="a00280.php#a328717bdaeb2d117c550927cf41e6f72">pci_device</a>;</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>                *func = (unsigned) khrbusinfo.<a class="code hl_variable" href="a00280.php#ab4032f46a44cf9ffc7b2ddc25001e3f0">pci_function</a>;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>        }</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>        clret = clGetDeviceInfo(device, HWLOC_CL_DEVICE_TOPOLOGY_AMD, <span class="keyword">sizeof</span>(amdtopo), &amp;amdtopo, NULL);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>        <span class="keywordflow">if</span> (CL_SUCCESS == clret</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>            &amp;&amp; HWLOC_CL_DEVICE_TOPOLOGY_TYPE_PCIE_AMD == amdtopo.<a class="code hl_variable" href="a00284.php#aeb5e5d12bf653f750dafedae6e225c3a">raw</a>.<a class="code hl_variable" href="a00284.php#a8ec4ea89b862bb271845b48063f332b4">type</a>) {</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>                *domain = 0; <span class="comment">/* can&#39;t do anything better */</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>                <span class="comment">/* cl_device_topology_amd stores bus ID in cl_char, dont convert those signed char directly to unsigned int */</span></div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>                *bus = (unsigned) (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) amdtopo.<a class="code hl_variable" href="a00284.php#aef8560f6c359be0c5bdbd2840580d79c">pcie</a>.<a class="code hl_variable" href="a00284.php#a4a23e3cc034b7ab105cab0e863dcab69">bus</a>;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>                *dev = (unsigned) (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) amdtopo.<a class="code hl_variable" href="a00284.php#aef8560f6c359be0c5bdbd2840580d79c">pcie</a>.<a class="code hl_variable" href="a00284.php#a017033a953d71455b067007cabb92e9c">device</a>;</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>                *func = (unsigned) (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) amdtopo.<a class="code hl_variable" href="a00284.php#aef8560f6c359be0c5bdbd2840580d79c">pcie</a>.<a class="code hl_variable" href="a00284.php#a77a67ac73cff98d330ef7258b240bac3">function</a>;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>        }</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>        clret = clGetDeviceInfo(device, HWLOC_CL_DEVICE_PCI_BUS_ID_NV, <span class="keyword">sizeof</span>(nvbus), &amp;nvbus, NULL);</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>        <span class="keywordflow">if</span> (CL_SUCCESS == clret) {</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>                clret = clGetDeviceInfo(device, HWLOC_CL_DEVICE_PCI_SLOT_ID_NV, <span class="keyword">sizeof</span>(nvslot), &amp;nvslot, NULL);</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>                <span class="keywordflow">if</span> (CL_SUCCESS == clret) {</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>                        clret = clGetDeviceInfo(device, HWLOC_CL_DEVICE_PCI_DOMAIN_ID_NV, <span class="keyword">sizeof</span>(nvdomain), &amp;nvdomain, NULL);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>                        <span class="keywordflow">if</span> (CL_SUCCESS == clret) { <span class="comment">/* available since CUDA 10.2 */</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>                                *domain = nvdomain;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>                        } <span class="keywordflow">else</span> {</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>                                *domain = 0;</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>                        }</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>                        *bus = nvbus &amp; 0xff;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>                        <span class="comment">/* non-documented but used in many other projects */</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>                        *dev = nvslot &gt;&gt; 3;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>                        *func = nvslot &amp; 0x7;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>                        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>                }</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>        }</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>}</div>
</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span><span class="keyword">static</span> __hwloc_inline <span class="keywordtype">int</span></div>
<div class="foldopen" id="foldopen00156" data-start="{" data-end="}">
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno"><a class="line" href="a00176.php#gacc32737d4648d16b0d292438f210ec90">  156</a></span><a class="code hl_function" href="a00176.php#gacc32737d4648d16b0d292438f210ec90">hwloc_opencl_get_device_cpuset</a>(<a class="code hl_typedef" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology __hwloc_attribute_unused,</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>                               cl_device_id device __hwloc_attribute_unused,</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>                               <a class="code hl_typedef" href="a00139.php#ga4bbf39b68b6f568fb92739e7c0ea7801">hwloc_cpuset_t</a> set)</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>{</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span><span class="preprocessor">#if (defined HWLOC_LINUX_SYS)</span></div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>        <span class="comment">/* If we&#39;re on Linux, try AMD/NVIDIA extensions + the sysfs mechanism to get the local cpus */</span></div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span><span class="preprocessor">#define HWLOC_OPENCL_DEVICE_SYSFS_PATH_MAX 128</span></div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>        <span class="keywordtype">char</span> path[HWLOC_OPENCL_DEVICE_SYSFS_PATH_MAX];</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>        <span class="keywordtype">unsigned</span> pcidomain, pcibus, pcidev, pcifunc;</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>        <span class="keywordflow">if</span> (!<a class="code hl_function" href="a00149.php#ga68ffdcfd9175cdf40709801092f18017">hwloc_topology_is_thissystem</a>(topology)) {</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>                errno = EINVAL;</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>        }</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>        <span class="keywordflow">if</span> (<a class="code hl_function" href="a00176.php#gab89e4d20f8a353299351b41849e35ac9">hwloc_opencl_get_device_pci_busid</a>(device, &amp;pcidomain, &amp;pcibus, &amp;pcidev, &amp;pcifunc) &lt; 0) {</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>                <a class="code hl_function" href="a00161.php#ga72a29824798b48784b8217471ec8f14c">hwloc_bitmap_copy</a>(set, <a class="code hl_function" href="a00158.php#gaee30e03391c1ed7dfd617fb5c7bbb033">hwloc_topology_get_complete_cpuset</a>(topology));</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>        }</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span> </div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>        sprintf(path, <span class="stringliteral">&quot;/sys/bus/pci/devices/%04x:%02x:%02x.%01x/local_cpus&quot;</span>, pcidomain, pcibus, pcidev, pcifunc);</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>        <span class="keywordflow">if</span> (<a class="code hl_function" href="a00171.php#gaf72d83e273803226ce772973e37b85de">hwloc_linux_read_path_as_cpumask</a>(path, set) &lt; 0</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>            || <a class="code hl_function" href="a00161.php#ga5b64be28f5a7176ed8ad0d6a90bdf108">hwloc_bitmap_iszero</a>(set))</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>                <a class="code hl_function" href="a00161.php#ga72a29824798b48784b8217471ec8f14c">hwloc_bitmap_copy</a>(set, <a class="code hl_function" href="a00158.php#gaee30e03391c1ed7dfd617fb5c7bbb033">hwloc_topology_get_complete_cpuset</a>(topology));</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>        <span class="comment">/* Non-Linux systems simply get a full cpuset */</span></div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>        <a class="code hl_function" href="a00161.php#ga72a29824798b48784b8217471ec8f14c">hwloc_bitmap_copy</a>(set, <a class="code hl_function" href="a00158.php#gaee30e03391c1ed7dfd617fb5c7bbb033">hwloc_topology_get_complete_cpuset</a>(topology));</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>}</div>
</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span><span class="keyword">static</span> __hwloc_inline <a class="code hl_struct" href="a00196.php">hwloc_obj_t</a></div>
<div class="foldopen" id="foldopen00203" data-start="{" data-end="}">
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno"><a class="line" href="a00176.php#gae39352d124cb330eb37b84b418ed6cc5">  203</a></span><a class="code hl_function" href="a00176.php#gae39352d124cb330eb37b84b418ed6cc5">hwloc_opencl_get_device_osdev_by_index</a>(<a class="code hl_typedef" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology,</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>                                       <span class="keywordtype">unsigned</span> platform_index, <span class="keywordtype">unsigned</span> device_index)</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>{</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>        <span class="keywordtype">unsigned</span> x = (unsigned) -1, y = (<span class="keywordtype">unsigned</span>) -1;</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>        <a class="code hl_struct" href="a00196.php">hwloc_obj_t</a> osdev = NULL;</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>        <span class="keywordflow">while</span> ((osdev = <a class="code hl_function" href="a00160.php#ga8b4584c8949e2c5f1c97ba7fe92b8145">hwloc_get_next_osdev</a>(topology, osdev)) != NULL) {</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>                <span class="keywordflow">if</span> (<a class="code hl_enumvalue" href="a00140.php#gga64f5d539df299c97ae80ce53fc4b56c0a46f8927e1c3e137eaa86cc8f6861fb83">HWLOC_OBJ_OSDEV_COPROC</a> == osdev-&gt;<a class="code hl_variable" href="a00196.php#accd40e29f71f19e88db62ea3df02adc8">attr</a>-&gt;<a class="code hl_variable" href="a00200.php#aaf7a5c38b5185703ff18c46ad2761dcf">osdev</a>.<a class="code hl_variable" href="a00240.php#a31e019e27e54ac6138d04be639bb96f9">type</a></div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>                    &amp;&amp; osdev-&gt;<a class="code hl_variable" href="a00196.php#abb709ec38f2970677e4e57d1d30be96d">name</a></div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>                    &amp;&amp; sscanf(osdev-&gt;<a class="code hl_variable" href="a00196.php#abb709ec38f2970677e4e57d1d30be96d">name</a>, <span class="stringliteral">&quot;opencl%ud%u&quot;</span>, &amp;x, &amp;y) == 2</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>                    &amp;&amp; platform_index == x &amp;&amp; device_index == y)</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>                        <span class="keywordflow">return</span> osdev;</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>        }</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>        <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>}</div>
</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span> </div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span><span class="keyword">static</span> __hwloc_inline <a class="code hl_struct" href="a00196.php">hwloc_obj_t</a></div>
<div class="foldopen" id="foldopen00240" data-start="{" data-end="}">
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno"><a class="line" href="a00176.php#gadabfa6516aa12e5d8f79b9b4dd9f3cf8">  240</a></span><a class="code hl_function" href="a00176.php#gadabfa6516aa12e5d8f79b9b4dd9f3cf8">hwloc_opencl_get_device_osdev</a>(<a class="code hl_typedef" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology __hwloc_attribute_unused,</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>                              cl_device_id device __hwloc_attribute_unused)</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>{</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>        <a class="code hl_struct" href="a00196.php">hwloc_obj_t</a> osdev;</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>        <span class="keywordtype">unsigned</span> pcidomain, pcibus, pcidevice, pcifunc;</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>        <span class="keywordflow">if</span> (<a class="code hl_function" href="a00176.php#gab89e4d20f8a353299351b41849e35ac9">hwloc_opencl_get_device_pci_busid</a>(device, &amp;pcidomain, &amp;pcibus, &amp;pcidevice, &amp;pcifunc) &lt; 0) {</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>                errno = EINVAL;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>                <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>        }</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span> </div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>        osdev = NULL;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>        <span class="keywordflow">while</span> ((osdev = <a class="code hl_function" href="a00160.php#ga8b4584c8949e2c5f1c97ba7fe92b8145">hwloc_get_next_osdev</a>(topology, osdev)) != NULL) {</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>                <a class="code hl_struct" href="a00196.php">hwloc_obj_t</a> pcidev = osdev-&gt;<a class="code hl_variable" href="a00196.php#adc494f6aed939992be1c55cca5822900">parent</a>;</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>                <span class="keywordflow">if</span> (strncmp(osdev-&gt;<a class="code hl_variable" href="a00196.php#abb709ec38f2970677e4e57d1d30be96d">name</a>, <span class="stringliteral">&quot;opencl&quot;</span>, 6))</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>                        <span class="keywordflow">continue</span>;</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>                <span class="keywordflow">if</span> (pcidev</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>                    &amp;&amp; pcidev-&gt;<a class="code hl_variable" href="a00196.php#acc4f0803f244867e68fe0036800be5de">type</a> == <a class="code hl_enumvalue" href="a00140.php#ggacd37bb612667dc437d66bfb175a8dc55a5d8117a54df1fbd3606ab19e42cb0ea9">HWLOC_OBJ_PCI_DEVICE</a></div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>                    &amp;&amp; pcidev-&gt;<a class="code hl_variable" href="a00196.php#accd40e29f71f19e88db62ea3df02adc8">attr</a>-&gt;<a class="code hl_variable" href="a00200.php#a0b66da7ab072f7c016f8ed86701f5a7c">pcidev</a>.<a class="code hl_variable" href="a00220.php#a8fba44988deb98613c1505a4019a34dc">domain</a> == pcidomain</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>                    &amp;&amp; pcidev-&gt;<a class="code hl_variable" href="a00196.php#accd40e29f71f19e88db62ea3df02adc8">attr</a>-&gt;<a class="code hl_variable" href="a00200.php#a0b66da7ab072f7c016f8ed86701f5a7c">pcidev</a>.<a class="code hl_variable" href="a00220.php#aae99e035e8d1387d7b8768aaa8eceb0a">bus</a> == pcibus</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>                    &amp;&amp; pcidev-&gt;<a class="code hl_variable" href="a00196.php#accd40e29f71f19e88db62ea3df02adc8">attr</a>-&gt;<a class="code hl_variable" href="a00200.php#a0b66da7ab072f7c016f8ed86701f5a7c">pcidev</a>.<a class="code hl_variable" href="a00220.php#a3d70c84a12f7e93d14c8d47bf4fd9dc5">dev</a> == pcidevice</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>                    &amp;&amp; pcidev-&gt;<a class="code hl_variable" href="a00196.php#accd40e29f71f19e88db62ea3df02adc8">attr</a>-&gt;<a class="code hl_variable" href="a00200.php#a0b66da7ab072f7c016f8ed86701f5a7c">pcidev</a>.<a class="code hl_variable" href="a00220.php#a695f32df53f4ef728670bfcf31b74e0f">func</a> == pcifunc)</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>                        <span class="keywordflow">return</span> osdev;</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>                <span class="comment">/* if PCI are filtered out, we need a info attr to match on */</span></div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>        }</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span> </div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>        <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>}</div>
</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span> </div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span><span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>} <span class="comment">/* extern &quot;C&quot; */</span></div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span> </div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span><span class="preprocessor">#endif </span><span class="comment">/* HWLOC_OPENCL_H */</span><span class="preprocessor"></span></div>
<div class="ttc" id="aa00139_php_ga4bbf39b68b6f568fb92739e7c0ea7801"><div class="ttname"><a href="a00139.php#ga4bbf39b68b6f568fb92739e7c0ea7801">hwloc_cpuset_t</a></div><div class="ttdeci">hwloc_bitmap_t hwloc_cpuset_t</div><div class="ttdoc">A CPU set is a bitmap whose bits are set according to CPU physical OS indexes.</div><div class="ttdef"><b>Definition</b> hwloc.h:161</div></div>
<div class="ttc" id="aa00140_php_gga64f5d539df299c97ae80ce53fc4b56c0a46f8927e1c3e137eaa86cc8f6861fb83"><div class="ttname"><a href="a00140.php#gga64f5d539df299c97ae80ce53fc4b56c0a46f8927e1c3e137eaa86cc8f6861fb83">HWLOC_OBJ_OSDEV_COPROC</a></div><div class="ttdeci">@ HWLOC_OBJ_OSDEV_COPROC</div><div class="ttdoc">Operating system co-processor device. For instance &quot;opencl0d0&quot; for a OpenCL device,...</div><div class="ttdef"><b>Definition</b> hwloc.h:386</div></div>
<div class="ttc" id="aa00140_php_ggacd37bb612667dc437d66bfb175a8dc55a5d8117a54df1fbd3606ab19e42cb0ea9"><div class="ttname"><a href="a00140.php#ggacd37bb612667dc437d66bfb175a8dc55a5d8117a54df1fbd3606ab19e42cb0ea9">HWLOC_OBJ_PCI_DEVICE</a></div><div class="ttdeci">@ HWLOC_OBJ_PCI_DEVICE</div><div class="ttdoc">PCI device (filtered out by default).</div><div class="ttdef"><b>Definition</b> hwloc.h:295</div></div>
<div class="ttc" id="aa00142_php_ga9d1e76ee15a7dee158b786c30b6a6e38"><div class="ttname"><a href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a></div><div class="ttdeci">struct hwloc_topology * hwloc_topology_t</div><div class="ttdoc">Topology context.</div><div class="ttdef"><b>Definition</b> hwloc.h:743</div></div>
<div class="ttc" id="aa00149_php_ga68ffdcfd9175cdf40709801092f18017"><div class="ttname"><a href="a00149.php#ga68ffdcfd9175cdf40709801092f18017">hwloc_topology_is_thissystem</a></div><div class="ttdeci">int hwloc_topology_is_thissystem(hwloc_topology_t restrict topology)</div><div class="ttdoc">Does the topology context come from this system?</div></div>
<div class="ttc" id="aa00158_php_gaee30e03391c1ed7dfd617fb5c7bbb033"><div class="ttname"><a href="a00158.php#gaee30e03391c1ed7dfd617fb5c7bbb033">hwloc_topology_get_complete_cpuset</a></div><div class="ttdeci">hwloc_const_cpuset_t hwloc_topology_get_complete_cpuset(hwloc_topology_t topology)</div><div class="ttdoc">Get complete CPU set.</div></div>
<div class="ttc" id="aa00160_php_ga8b4584c8949e2c5f1c97ba7fe92b8145"><div class="ttname"><a href="a00160.php#ga8b4584c8949e2c5f1c97ba7fe92b8145">hwloc_get_next_osdev</a></div><div class="ttdeci">static hwloc_obj_t hwloc_get_next_osdev(hwloc_topology_t topology, hwloc_obj_t prev)</div><div class="ttdoc">Get the next OS device in the system.</div><div class="ttdef"><b>Definition</b> helper.h:1290</div></div>
<div class="ttc" id="aa00161_php_ga5b64be28f5a7176ed8ad0d6a90bdf108"><div class="ttname"><a href="a00161.php#ga5b64be28f5a7176ed8ad0d6a90bdf108">hwloc_bitmap_iszero</a></div><div class="ttdeci">int hwloc_bitmap_iszero(hwloc_const_bitmap_t bitmap)</div><div class="ttdoc">Test whether bitmap bitmap is empty.</div></div>
<div class="ttc" id="aa00161_php_ga72a29824798b48784b8217471ec8f14c"><div class="ttname"><a href="a00161.php#ga72a29824798b48784b8217471ec8f14c">hwloc_bitmap_copy</a></div><div class="ttdeci">int hwloc_bitmap_copy(hwloc_bitmap_t dst, hwloc_const_bitmap_t src)</div><div class="ttdoc">Copy the contents of bitmap src into the already allocated bitmap dst.</div></div>
<div class="ttc" id="aa00171_php_gaf72d83e273803226ce772973e37b85de"><div class="ttname"><a href="a00171.php#gaf72d83e273803226ce772973e37b85de">hwloc_linux_read_path_as_cpumask</a></div><div class="ttdeci">int hwloc_linux_read_path_as_cpumask(const char *path, hwloc_bitmap_t set)</div><div class="ttdoc">Convert a linux kernel cpumask file path into a hwloc bitmap set.</div></div>
<div class="ttc" id="aa00176_php_gab89e4d20f8a353299351b41849e35ac9"><div class="ttname"><a href="a00176.php#gab89e4d20f8a353299351b41849e35ac9">hwloc_opencl_get_device_pci_busid</a></div><div class="ttdeci">static int hwloc_opencl_get_device_pci_busid(cl_device_id device, unsigned *domain, unsigned *bus, unsigned *dev, unsigned *func)</div><div class="ttdoc">Return the domain, bus and device IDs of the OpenCL device device.</div><div class="ttdef"><b>Definition</b> opencl.h:86</div></div>
<div class="ttc" id="aa00176_php_gacc32737d4648d16b0d292438f210ec90"><div class="ttname"><a href="a00176.php#gacc32737d4648d16b0d292438f210ec90">hwloc_opencl_get_device_cpuset</a></div><div class="ttdeci">static int hwloc_opencl_get_device_cpuset(hwloc_topology_t topology, cl_device_id device, hwloc_cpuset_t set)</div><div class="ttdoc">Get the CPU set of processors that are physically close to OpenCL device device.</div><div class="ttdef"><b>Definition</b> opencl.h:156</div></div>
<div class="ttc" id="aa00176_php_gadabfa6516aa12e5d8f79b9b4dd9f3cf8"><div class="ttname"><a href="a00176.php#gadabfa6516aa12e5d8f79b9b4dd9f3cf8">hwloc_opencl_get_device_osdev</a></div><div class="ttdeci">static hwloc_obj_t hwloc_opencl_get_device_osdev(hwloc_topology_t topology, cl_device_id device)</div><div class="ttdoc">Get the hwloc OS device object corresponding to OpenCL device deviceX.</div><div class="ttdef"><b>Definition</b> opencl.h:240</div></div>
<div class="ttc" id="aa00176_php_gae39352d124cb330eb37b84b418ed6cc5"><div class="ttname"><a href="a00176.php#gae39352d124cb330eb37b84b418ed6cc5">hwloc_opencl_get_device_osdev_by_index</a></div><div class="ttdeci">static hwloc_obj_t hwloc_opencl_get_device_osdev_by_index(hwloc_topology_t topology, unsigned platform_index, unsigned device_index)</div><div class="ttdoc">Get the hwloc OS device object corresponding to the OpenCL device for the given indexes.</div><div class="ttdef"><b>Definition</b> opencl.h:203</div></div>
<div class="ttc" id="aa00196_php"><div class="ttname"><a href="a00196.php">hwloc_obj</a></div><div class="ttdoc">Structure of a topology object.</div><div class="ttdef"><b>Definition</b> hwloc.h:432</div></div>
<div class="ttc" id="aa00196_php_abb709ec38f2970677e4e57d1d30be96d"><div class="ttname"><a href="a00196.php#abb709ec38f2970677e4e57d1d30be96d">hwloc_obj::name</a></div><div class="ttdeci">char * name</div><div class="ttdoc">Object-specific name if any. Mostly used for identifying OS devices and Misc objects where a name str...</div><div class="ttdef"><b>Definition</b> hwloc.h:444</div></div>
<div class="ttc" id="aa00196_php_acc4f0803f244867e68fe0036800be5de"><div class="ttname"><a href="a00196.php#acc4f0803f244867e68fe0036800be5de">hwloc_obj::type</a></div><div class="ttdeci">hwloc_obj_type_t type</div><div class="ttdoc">Type of object.</div><div class="ttdef"><b>Definition</b> hwloc.h:434</div></div>
<div class="ttc" id="aa00196_php_accd40e29f71f19e88db62ea3df02adc8"><div class="ttname"><a href="a00196.php#accd40e29f71f19e88db62ea3df02adc8">hwloc_obj::attr</a></div><div class="ttdeci">union hwloc_obj_attr_u * attr</div><div class="ttdoc">Object type-specific Attributes, may be NULL if no attribute value was found.</div><div class="ttdef"><b>Definition</b> hwloc.h:451</div></div>
<div class="ttc" id="aa00196_php_adc494f6aed939992be1c55cca5822900"><div class="ttname"><a href="a00196.php#adc494f6aed939992be1c55cca5822900">hwloc_obj::parent</a></div><div class="ttdeci">struct hwloc_obj * parent</div><div class="ttdoc">Parent, NULL if root (Machine object)</div><div class="ttdef"><b>Definition</b> hwloc.h:482</div></div>
<div class="ttc" id="aa00200_php_a0b66da7ab072f7c016f8ed86701f5a7c"><div class="ttname"><a href="a00200.php#a0b66da7ab072f7c016f8ed86701f5a7c">hwloc_obj_attr_u::pcidev</a></div><div class="ttdeci">struct hwloc_obj_attr_u::hwloc_pcidev_attr_s pcidev</div></div>
<div class="ttc" id="aa00200_php_aaf7a5c38b5185703ff18c46ad2761dcf"><div class="ttname"><a href="a00200.php#aaf7a5c38b5185703ff18c46ad2761dcf">hwloc_obj_attr_u::osdev</a></div><div class="ttdeci">struct hwloc_obj_attr_u::hwloc_osdev_attr_s osdev</div></div>
<div class="ttc" id="aa00220_php_a3d70c84a12f7e93d14c8d47bf4fd9dc5"><div class="ttname"><a href="a00220.php#a3d70c84a12f7e93d14c8d47bf4fd9dc5">hwloc_obj_attr_u::hwloc_pcidev_attr_s::dev</a></div><div class="ttdeci">unsigned char dev</div><div class="ttdoc">Device number (zz in the PCI BDF notation xxxx:yy:zz.t).</div><div class="ttdef"><b>Definition</b> hwloc.h:678</div></div>
<div class="ttc" id="aa00220_php_a695f32df53f4ef728670bfcf31b74e0f"><div class="ttname"><a href="a00220.php#a695f32df53f4ef728670bfcf31b74e0f">hwloc_obj_attr_u::hwloc_pcidev_attr_s::func</a></div><div class="ttdeci">unsigned char func</div><div class="ttdoc">Function number (t in the PCI BDF notation xxxx:yy:zz.t).</div><div class="ttdef"><b>Definition</b> hwloc.h:679</div></div>
<div class="ttc" id="aa00220_php_a8fba44988deb98613c1505a4019a34dc"><div class="ttname"><a href="a00220.php#a8fba44988deb98613c1505a4019a34dc">hwloc_obj_attr_u::hwloc_pcidev_attr_s::domain</a></div><div class="ttdeci">unsigned short domain</div><div class="ttdoc">Domain number (xxxx in the PCI BDF notation xxxx:yy:zz.t). Only 16bits PCI domains are supported by d...</div><div class="ttdef"><b>Definition</b> hwloc.h:671</div></div>
<div class="ttc" id="aa00220_php_aae99e035e8d1387d7b8768aaa8eceb0a"><div class="ttname"><a href="a00220.php#aae99e035e8d1387d7b8768aaa8eceb0a">hwloc_obj_attr_u::hwloc_pcidev_attr_s::bus</a></div><div class="ttdeci">unsigned char bus</div><div class="ttdoc">Bus number (yy in the PCI BDF notation xxxx:yy:zz.t).</div><div class="ttdef"><b>Definition</b> hwloc.h:677</div></div>
<div class="ttc" id="aa00240_php_a31e019e27e54ac6138d04be639bb96f9"><div class="ttname"><a href="a00240.php#a31e019e27e54ac6138d04be639bb96f9">hwloc_obj_attr_u::hwloc_osdev_attr_s::type</a></div><div class="ttdeci">hwloc_obj_osdev_type_t type</div><div class="ttdef"><b>Definition</b> hwloc.h:717</div></div>
<div class="ttc" id="aa00280_php"><div class="ttname"><a href="a00280.php">hwloc_cl_device_pci_bus_info_khr</a></div><div class="ttdef"><b>Definition</b> opencl.h:45</div></div>
<div class="ttc" id="aa00280_php_a0e4d316b01eee00c3750d1c853be9c01"><div class="ttname"><a href="a00280.php#a0e4d316b01eee00c3750d1c853be9c01">hwloc_cl_device_pci_bus_info_khr::pci_bus</a></div><div class="ttdeci">cl_uint pci_bus</div><div class="ttdef"><b>Definition</b> opencl.h:47</div></div>
<div class="ttc" id="aa00280_php_a328717bdaeb2d117c550927cf41e6f72"><div class="ttname"><a href="a00280.php#a328717bdaeb2d117c550927cf41e6f72">hwloc_cl_device_pci_bus_info_khr::pci_device</a></div><div class="ttdeci">cl_uint pci_device</div><div class="ttdef"><b>Definition</b> opencl.h:48</div></div>
<div class="ttc" id="aa00280_php_a5bdfbcb0dee610f9f6f7f95ace89e298"><div class="ttname"><a href="a00280.php#a5bdfbcb0dee610f9f6f7f95ace89e298">hwloc_cl_device_pci_bus_info_khr::pci_domain</a></div><div class="ttdeci">cl_uint pci_domain</div><div class="ttdef"><b>Definition</b> opencl.h:46</div></div>
<div class="ttc" id="aa00280_php_ab4032f46a44cf9ffc7b2ddc25001e3f0"><div class="ttname"><a href="a00280.php#ab4032f46a44cf9ffc7b2ddc25001e3f0">hwloc_cl_device_pci_bus_info_khr::pci_function</a></div><div class="ttdeci">cl_uint pci_function</div><div class="ttdef"><b>Definition</b> opencl.h:49</div></div>
<div class="ttc" id="aa00284_php"><div class="ttname"><a href="a00284.php">hwloc_cl_device_topology_amd</a></div><div class="ttdef"><b>Definition</b> opencl.h:55</div></div>
<div class="ttc" id="aa00284_php_a017033a953d71455b067007cabb92e9c"><div class="ttname"><a href="a00284.php#a017033a953d71455b067007cabb92e9c">hwloc_cl_device_topology_amd::device</a></div><div class="ttdeci">cl_char device</div><div class="ttdef"><b>Definition</b> opencl.h:57</div></div>
<div class="ttc" id="aa00284_php_a4a23e3cc034b7ab105cab0e863dcab69"><div class="ttname"><a href="a00284.php#a4a23e3cc034b7ab105cab0e863dcab69">hwloc_cl_device_topology_amd::bus</a></div><div class="ttdeci">cl_char bus</div><div class="ttdef"><b>Definition</b> opencl.h:57</div></div>
<div class="ttc" id="aa00284_php_a77a67ac73cff98d330ef7258b240bac3"><div class="ttname"><a href="a00284.php#a77a67ac73cff98d330ef7258b240bac3">hwloc_cl_device_topology_amd::function</a></div><div class="ttdeci">cl_char function</div><div class="ttdef"><b>Definition</b> opencl.h:57</div></div>
<div class="ttc" id="aa00284_php_a8ec4ea89b862bb271845b48063f332b4"><div class="ttname"><a href="a00284.php#a8ec4ea89b862bb271845b48063f332b4">hwloc_cl_device_topology_amd::type</a></div><div class="ttdeci">cl_uint type</div><div class="ttdef"><b>Definition</b> opencl.h:56</div></div>
<div class="ttc" id="aa00284_php_aeb5e5d12bf653f750dafedae6e225c3a"><div class="ttname"><a href="a00284.php#aeb5e5d12bf653f750dafedae6e225c3a">hwloc_cl_device_topology_amd::raw</a></div><div class="ttdeci">struct hwloc_cl_device_topology_amd::@0 raw</div></div>
<div class="ttc" id="aa00284_php_aef8560f6c359be0c5bdbd2840580d79c"><div class="ttname"><a href="a00284.php#aef8560f6c359be0c5bdbd2840580d79c">hwloc_cl_device_topology_amd::pcie</a></div><div class="ttdeci">struct hwloc_cl_device_topology_amd::@1 pcie</div></div>
</div><!-- fragment --></div><!-- contents -->
<?php
include_once("$topdir/includes/footer.inc");
