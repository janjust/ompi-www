<?php
$topdir = "../../../..";
# Note that we must use the PHP "$$" indirection to assign to the
# "title" variable, because if we list "$ title" (without the space)
# in this file, Doxygen will replace it with a string title.
$ver = basename(getcwd());
$thwarting_doxygen_preprocessor = "title";
$$thwarting_doxygen_preprocessor = "Portable Hardware Locality (hwloc) Documentation: $ver";
$header_include_file = "$topdir/projects/hwloc/doc/$ver/www.open-mpi.org-css.inc";
include_once("$topdir/projects/hwloc/nav.inc");
include_once("$topdir/includes/header.inc");
include_once("$topdir/includes/code.inc");
?>
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle"><div class="title">hwloc_component Struct Reference<div class="ingroups"><a class="el" href="a00187.php">Components and Plugins: Generic components</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="a00134_source.php">plugins.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a3250bd6fc9713946991d805e48091b2e" id="r_a3250bd6fc9713946991d805e48091b2e"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00340.php#a3250bd6fc9713946991d805e48091b2e">abi</a></td></tr>
<tr class="separator:a3250bd6fc9713946991d805e48091b2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea613546886d9b8221cadba920fe3ebc" id="r_aea613546886d9b8221cadba920fe3ebc"><td class="memItemLeft" align="right" valign="top">int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00340.php#aea613546886d9b8221cadba920fe3ebc">init</a> )(unsigned long <a class="el" href="a00340.php#ab8043c5b4cc0e81aabba586ccb194335">flags</a>)</td></tr>
<tr class="separator:aea613546886d9b8221cadba920fe3ebc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4612015451a1c706e8ba19114cb8baae" id="r_a4612015451a1c706e8ba19114cb8baae"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00340.php#a4612015451a1c706e8ba19114cb8baae">finalize</a> )(unsigned long <a class="el" href="a00340.php#ab8043c5b4cc0e81aabba586ccb194335">flags</a>)</td></tr>
<tr class="separator:a4612015451a1c706e8ba19114cb8baae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a789208ada7e17492cfd3a5a88a6bb0ee" id="r_a789208ada7e17492cfd3a5a88a6bb0ee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00187.php#ga31a5a455f4e666b936f0a9e8fb9a0f47">hwloc_component_type_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00340.php#a789208ada7e17492cfd3a5a88a6bb0ee">type</a></td></tr>
<tr class="separator:a789208ada7e17492cfd3a5a88a6bb0ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8043c5b4cc0e81aabba586ccb194335" id="r_ab8043c5b4cc0e81aabba586ccb194335"><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00340.php#ab8043c5b4cc0e81aabba586ccb194335">flags</a></td></tr>
<tr class="separator:ab8043c5b4cc0e81aabba586ccb194335"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b8cffd1d943c29fdc102b841b8598d4" id="r_a4b8cffd1d943c29fdc102b841b8598d4"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00340.php#a4b8cffd1d943c29fdc102b841b8598d4">data</a></td></tr>
<tr class="separator:a4b8cffd1d943c29fdc102b841b8598d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Generic component structure. </p>
<p>Generic components structure, either statically listed by configure in static-components.h or dynamically loaded as a plugin. </p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="a3250bd6fc9713946991d805e48091b2e" name="a3250bd6fc9713946991d805e48091b2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3250bd6fc9713946991d805e48091b2e">&#9670;&#160;</a></span>abi</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned hwloc_component::abi</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Component ABI version, set to <a class="el" href="a00138.php#gaac5bc1f46f55e10ef0141a68ce70e21f" title="Current component and plugin ABI version (see hwloc/plugins.h)">HWLOC_COMPONENT_ABI</a>. </p>

</div>
</div>
<a id="a4b8cffd1d943c29fdc102b841b8598d4" name="a4b8cffd1d943c29fdc102b841b8598d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b8cffd1d943c29fdc102b841b8598d4">&#9670;&#160;</a></span>data</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* hwloc_component::data</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Component data, pointing to a struct <a class="el" href="a00328.php" title="Discovery component structure.">hwloc_disc_component</a> or struct hwloc_xml_component. </p>

</div>
</div>
<a id="a4612015451a1c706e8ba19114cb8baae" name="a4612015451a1c706e8ba19114cb8baae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4612015451a1c706e8ba19114cb8baae">&#9670;&#160;</a></span>finalize</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* hwloc_component::finalize) (unsigned long <a class="el" href="a00340.php#ab8043c5b4cc0e81aabba586ccb194335">flags</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Process-wide component termination callback. </p>
<p>This optional callback is called after unregistering the component from the hwloc core (before unloading the plugin).</p>
<p><code>flags</code> is always 0 for now.</p>
<dl class="section note"><dt>Note</dt><dd>If the component uses ltdl for loading its own plugins, it should load/unload them only in <a class="el" href="a00340.php#aea613546886d9b8221cadba920fe3ebc" title="Process-wide component initialization callback.">init()</a> and <a class="el" href="a00340.php#a4612015451a1c706e8ba19114cb8baae" title="Process-wide component termination callback.">finalize()</a>, to avoid race conditions with hwloc's use of ltdl. </dd></dl>

</div>
</div>
<a id="ab8043c5b4cc0e81aabba586ccb194335" name="ab8043c5b4cc0e81aabba586ccb194335"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8043c5b4cc0e81aabba586ccb194335">&#9670;&#160;</a></span>flags</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long hwloc_component::flags</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Component flags, unused for now. </p>

</div>
</div>
<a id="aea613546886d9b8221cadba920fe3ebc" name="aea613546886d9b8221cadba920fe3ebc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea613546886d9b8221cadba920fe3ebc">&#9670;&#160;</a></span>init</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int(* hwloc_component::init) (unsigned long <a class="el" href="a00340.php#ab8043c5b4cc0e81aabba586ccb194335">flags</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Process-wide component initialization callback. </p>
<p>This optional callback is called when the component is registered to the hwloc core (after loading the plugin).</p>
<p>When the component is built as a plugin, this callback should call hwloc_check_plugin_namespace() and return an negative error code on error.</p>
<p><code>flags</code> is always 0 for now.</p>
<dl class="section return"><dt>Returns</dt><dd>0 on success, or a negative code on error.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>If the component uses ltdl for loading its own plugins, it should load/unload them only in <a class="el" href="a00340.php#aea613546886d9b8221cadba920fe3ebc" title="Process-wide component initialization callback.">init()</a> and <a class="el" href="a00340.php#a4612015451a1c706e8ba19114cb8baae" title="Process-wide component termination callback.">finalize()</a>, to avoid race conditions with hwloc's use of ltdl. </dd></dl>

</div>
</div>
<a id="a789208ada7e17492cfd3a5a88a6bb0ee" name="a789208ada7e17492cfd3a5a88a6bb0ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a789208ada7e17492cfd3a5a88a6bb0ee">&#9670;&#160;</a></span>type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00187.php#ga31a5a455f4e666b936f0a9e8fb9a0f47">hwloc_component_type_t</a> hwloc_component::type</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Component type. </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="a00134_source.php">plugins.h</a></li>
</ul>
</div><!-- contents -->
<?php
include_once("$topdir/includes/footer.inc");
