<?php
$topdir = "../../../..";
# Note that we must use the PHP "$$" indirection to assign to the
# "title" variable, because if we list "$ title" (without the space)
# in this file, Doxygen will replace it with a string title.
$ver = basename(getcwd());
$thwarting_doxygen_preprocessor = "title";
$$thwarting_doxygen_preprocessor = "Portable Hardware Locality (hwloc) Documentation: $ver";
$header_include_file = "$topdir/projects/hwloc/doc/$ver/www.open-mpi.org-css.inc";
include_once("$topdir/projects/hwloc/nav.inc");
include_once("$topdir/includes/header.inc");
include_once("$topdir/includes/code.inc");
?>
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div><div class="header">
  <div class="headertitle"><div class="title">Compiling software on top of hwloc's C API</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>A program using the hwloc C API (for instance with <code>hwloc-hello.c</code> presented in <a class="el" href="index.php#interface_example">API Example</a>) may be built with standard development tools. <code>pkg-config</code> provides easy ways to retrieve the required compiler and linker flags as described below, but it is not mandatory.</p>
<h1><a class="anchor" id="useapi_gnumake"></a>
Compiling on top of hwloc's C API with GNU Make</h1>
<p>Here's an example of Makefile for building <code>hwloc-hello.c</code> with GNU Make:</p>
<pre class="fragment">CFLAGS += $(shell pkg-config --cflags hwloc)
LDLIBS += $(shell pkg-config --libs hwloc)

hwloc-hello: hwloc-hello.c
        $(CC) hwloc-hello.c $(CFLAGS) -o hwloc-hello $(LDLIBS)
</pre><h1><a class="anchor" id="useapi_cmake"></a>
Compiling on top of hwloc's C API with CMake</h1>
<p>Here's an example de <code>CMakeLists.txt</code> which shows variables obtained from <code>pkg-config</code> and how to use them:</p>
<pre class="fragment">cmake_minimum_required(VERSION 3.6)
project(TEST_HWLOC C)

include(FindPkgConfig)
if(PKG_CONFIG_FOUND)
  pkg_search_module(HWLOC REQUIRED IMPORTED_TARGET hwloc)
else(PKG_CONFIG_FOUND)
  message(FATAL_ERROR "FindHWLOC needs pkg-config program and PKG_CONFIG_PATH must contain the path to hwloc.pc file.")
endif(PKG_CONFIG_FOUND)

add_executable(hwloc-hello hwloc-hello.c)
target_link_libraries(hwloc-hello PRIVATE PkgConfig::HWLOC)
</pre><p>The project may be built with: </p><pre class="fragment">cmake -B build
cmake --build build --verbose
</pre><p>The built binary is then available under <code>build/hwloc-hello</code>. </p>
</div></div><!-- contents -->
</div><!-- PageDoc -->
<?php
include_once("$topdir/includes/footer.inc");
