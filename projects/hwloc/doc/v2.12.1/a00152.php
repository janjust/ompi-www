<?php
$topdir = "../../../..";
# Note that we must use the PHP "$$" indirection to assign to the
# "title" variable, because if we list "$ title" (without the space)
# in this file, Doxygen will replace it with a string title.
$ver = basename(getcwd());
$thwarting_doxygen_preprocessor = "title";
$$thwarting_doxygen_preprocessor = "Portable Hardware Locality (hwloc) Documentation: $ver";
$header_include_file = "$topdir/projects/hwloc/doc/$ver/www.open-mpi.org-css.inc";
include_once("$topdir/projects/hwloc/nav.inc");
include_once("$topdir/includes/header.inc");
include_once("$topdir/includes/code.inc");
?>
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">Finding Objects inside a CPU set</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga8edc4c8f976062c42cb0551a44317d4c" id="r_ga8edc4c8f976062c42cb0551a44317d4c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00152.php#ga8edc4c8f976062c42cb0551a44317d4c">hwloc_get_first_largest_obj_inside_cpuset</a> (<a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set)</td></tr>
<tr class="separator:ga8edc4c8f976062c42cb0551a44317d4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34ca563fa3a6a4e05268f36a87668511" id="r_ga34ca563fa3a6a4e05268f36a87668511"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00152.php#ga34ca563fa3a6a4e05268f36a87668511">hwloc_get_largest_objs_inside_cpuset</a> (<a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, <a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a> *restrict objs, int max)</td></tr>
<tr class="separator:ga34ca563fa3a6a4e05268f36a87668511"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad444a20167320c79c7f3c233899badd5" id="r_gad444a20167320c79c7f3c233899badd5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00152.php#gad444a20167320c79c7f3c233899badd5">hwloc_get_next_obj_inside_cpuset_by_depth</a> (<a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, int depth, <a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a> prev)</td></tr>
<tr class="separator:gad444a20167320c79c7f3c233899badd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabf0e69621bd014605f24436b415b4247" id="r_gabf0e69621bd014605f24436b415b4247"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00152.php#gabf0e69621bd014605f24436b415b4247">hwloc_get_next_obj_inside_cpuset_by_type</a> (<a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, <a class="el" href="a00140.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type, <a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a> prev)</td></tr>
<tr class="separator:gabf0e69621bd014605f24436b415b4247"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4eded74ffab87e5ad154c817c2f9fd4c" id="r_ga4eded74ffab87e5ad154c817c2f9fd4c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00152.php#ga4eded74ffab87e5ad154c817c2f9fd4c">hwloc_get_obj_inside_cpuset_by_depth</a> (<a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, int depth, unsigned idx)</td></tr>
<tr class="separator:ga4eded74ffab87e5ad154c817c2f9fd4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf32c12c931955e111db73bb42921ca76" id="r_gaf32c12c931955e111db73bb42921ca76"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00152.php#gaf32c12c931955e111db73bb42921ca76">hwloc_get_obj_inside_cpuset_by_type</a> (<a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, <a class="el" href="a00140.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type, unsigned idx)</td></tr>
<tr class="separator:gaf32c12c931955e111db73bb42921ca76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa81ef7cb29d610b8acb0421c6f772d52" id="r_gaa81ef7cb29d610b8acb0421c6f772d52"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00152.php#gaa81ef7cb29d610b8acb0421c6f772d52">hwloc_get_nbobjs_inside_cpuset_by_depth</a> (<a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, int depth)</td></tr>
<tr class="separator:gaa81ef7cb29d610b8acb0421c6f772d52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a860bc70bcd789e7e872c221f7e3595" id="r_ga7a860bc70bcd789e7e872c221f7e3595"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00152.php#ga7a860bc70bcd789e7e872c221f7e3595">hwloc_get_nbobjs_inside_cpuset_by_type</a> (<a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, <a class="el" href="a00140.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type)</td></tr>
<tr class="separator:ga7a860bc70bcd789e7e872c221f7e3595"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7613539c0d840617a16a25ffcf25a643" id="r_ga7613539c0d840617a16a25ffcf25a643"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00152.php#ga7613539c0d840617a16a25ffcf25a643">hwloc_get_obj_index_inside_cpuset</a> (<a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, <a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a> obj)</td></tr>
<tr class="separator:ga7613539c0d840617a16a25ffcf25a643"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga8edc4c8f976062c42cb0551a44317d4c" name="ga8edc4c8f976062c42cb0551a44317d4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8edc4c8f976062c42cb0551a44317d4c">&#9670;&#160;</a></span>hwloc_get_first_largest_obj_inside_cpuset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a> hwloc_get_first_largest_obj_inside_cpuset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td>
          <td class="paramname"><em>set</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the first largest object included in the given cpuset <code>set</code>. </p>
<dl class="section return"><dt>Returns</dt><dd>the first object that is included in <code>set</code> and whose parent is not. </dd>
<dd>
<code>NULL</code> if no such object exists.</dd></dl>
<p>This is convenient for iterating over all largest objects within a CPU set by doing a loop getting the first largest object and clearing its CPU set from the remaining CPU set. </p>

</div>
</div>
<a id="ga34ca563fa3a6a4e05268f36a87668511" name="ga34ca563fa3a6a4e05268f36a87668511"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga34ca563fa3a6a4e05268f36a87668511">&#9670;&#160;</a></span>hwloc_get_largest_objs_inside_cpuset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_get_largest_objs_inside_cpuset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td>
          <td class="paramname"><em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a> *restrict&#160;</td>
          <td class="paramname"><em>objs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>max</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the set of largest objects covering exactly a given cpuset <code>set</code>. </p>
<dl class="section return"><dt>Returns</dt><dd>the number of objects returned in <code>objs</code>. </dd>
<dd>
-1 if no set of objects may cover that cpuset. </dd></dl>

</div>
</div>
<a id="gaa81ef7cb29d610b8acb0421c6f772d52" name="gaa81ef7cb29d610b8acb0421c6f772d52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa81ef7cb29d610b8acb0421c6f772d52">&#9670;&#160;</a></span>hwloc_get_nbobjs_inside_cpuset_by_depth()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned hwloc_get_nbobjs_inside_cpuset_by_depth </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td>
          <td class="paramname"><em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>depth</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the number of objects at depth <code>depth</code> included in CPU set <code>set</code>. </p>
<dl class="section return"><dt>Returns</dt><dd>the number of objects. </dd>
<dd>
0 if the depth is invalid.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Objects with empty CPU sets are ignored (otherwise they would be considered included in any given set).</dd>
<dd>
This function cannot work if objects at the given depth do not have CPU sets (I/O or Misc objects). </dd></dl>

</div>
</div>
<a id="ga7a860bc70bcd789e7e872c221f7e3595" name="ga7a860bc70bcd789e7e872c221f7e3595"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7a860bc70bcd789e7e872c221f7e3595">&#9670;&#160;</a></span>hwloc_get_nbobjs_inside_cpuset_by_type()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_get_nbobjs_inside_cpuset_by_type </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td>
          <td class="paramname"><em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00140.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the number of objects of type <code>type</code> included in CPU set <code>set</code>. </p>
<dl class="section return"><dt>Returns</dt><dd>the number of objects. </dd>
<dd>
0 if there are no objects of that type in the topology. </dd>
<dd>
-1 if there are multiple levels of objects of that type, the caller should fallback to <a class="el" href="a00152.php#gaa81ef7cb29d610b8acb0421c6f772d52" title="Return the number of objects at depth depth included in CPU set set.">hwloc_get_nbobjs_inside_cpuset_by_depth()</a>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Objects with empty CPU sets are ignored (otherwise they would be considered included in any given set).</dd>
<dd>
This function cannot work if objects of the given type do not have CPU sets (I/O objects). </dd></dl>

</div>
</div>
<a id="gad444a20167320c79c7f3c233899badd5" name="gad444a20167320c79c7f3c233899badd5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad444a20167320c79c7f3c233899badd5">&#9670;&#160;</a></span>hwloc_get_next_obj_inside_cpuset_by_depth()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a> hwloc_get_next_obj_inside_cpuset_by_depth </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td>
          <td class="paramname"><em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a>&#160;</td>
          <td class="paramname"><em>prev</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the next object at depth <code>depth</code> included in CPU set <code>set</code>. </p>
<p>The next invokation should pass the previous return value in <code>prev</code> so as to obtain the next object in <code>set</code>.</p>
<dl class="section return"><dt>Returns</dt><dd>the first object at depth <code>depth</code> included in <code>set</code> if <code>prev</code> is <code>NULL</code>. </dd>
<dd>
the next object at depth <code>depth</code> included in <code>set</code> if <code>prev</code> is not <code>NULL</code>. </dd>
<dd>
<code>NULL</code> if there is no next object.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Objects with empty CPU sets are ignored (otherwise they would be considered included in any given set).</dd>
<dd>
This function cannot work if objects at the given depth do not have CPU sets (I/O or Misc objects). </dd></dl>

</div>
</div>
<a id="gabf0e69621bd014605f24436b415b4247" name="gabf0e69621bd014605f24436b415b4247"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabf0e69621bd014605f24436b415b4247">&#9670;&#160;</a></span>hwloc_get_next_obj_inside_cpuset_by_type()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a> hwloc_get_next_obj_inside_cpuset_by_type </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td>
          <td class="paramname"><em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00140.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a>&#160;</td>
          <td class="paramname"><em>prev</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the next object of type <code>type</code> included in CPU set <code>set</code>. </p>
<p>The next invokation should pass the previous return value in <code>prev</code> so as to obtain the next object in <code>set</code>.</p>
<dl class="section return"><dt>Returns</dt><dd>the first object of type <code>type</code> included in <code>set</code> if <code>prev</code> is <code>NULL</code>. </dd>
<dd>
the next object of type <code>type</code> included in <code>set</code> if <code>prev</code> is not <code>NULL</code>. </dd>
<dd>
<code>NULL</code> if there is no next object. </dd>
<dd>
<code>NULL</code> if there is no depth for the given type. </dd>
<dd>
<code>NULL</code> if there are multiple depths for the given type, the caller should fallback to <a class="el" href="a00152.php#gad444a20167320c79c7f3c233899badd5" title="Return the next object at depth depth included in CPU set set.">hwloc_get_next_obj_inside_cpuset_by_depth()</a>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Objects with empty CPU sets are ignored (otherwise they would be considered included in any given set).</dd>
<dd>
This function cannot work if objects of the given type do not have CPU sets (I/O or Misc objects). </dd></dl>

</div>
</div>
<a id="ga7613539c0d840617a16a25ffcf25a643" name="ga7613539c0d840617a16a25ffcf25a643"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7613539c0d840617a16a25ffcf25a643">&#9670;&#160;</a></span>hwloc_get_obj_index_inside_cpuset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_get_obj_index_inside_cpuset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td>
          <td class="paramname"><em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a>&#160;</td>
          <td class="paramname"><em>obj</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the logical index among the objects included in CPU set <code>set</code>. </p>
<p>Consult all objects in the same level as <code>obj</code> and inside CPU set <code>set</code> in the logical order, and return the index of <code>obj</code> within them. If <code>set</code> covers the entire topology, this is the logical index of <code>obj</code>. Otherwise, this is similar to a logical index within the part of the topology defined by CPU set <code>set</code>.</p>
<dl class="section return"><dt>Returns</dt><dd>the logical index among the objects included in the set if any. </dd>
<dd>
-1 if the object is not included in the set.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Objects with empty CPU sets are ignored (otherwise they would be considered included in any given set).</dd>
<dd>
This function cannot work if obj does not have CPU sets (I/O objects). </dd></dl>

</div>
</div>
<a id="ga4eded74ffab87e5ad154c817c2f9fd4c" name="ga4eded74ffab87e5ad154c817c2f9fd4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4eded74ffab87e5ad154c817c2f9fd4c">&#9670;&#160;</a></span>hwloc_get_obj_inside_cpuset_by_depth()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a> hwloc_get_obj_inside_cpuset_by_depth </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td>
          <td class="paramname"><em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>idx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the (logically) <code>idx</code> -th object at depth <code>depth</code> included in CPU set <code>set</code>. </p>
<dl class="section return"><dt>Returns</dt><dd>the object if any, <code>NULL</code> otherwise.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Objects with empty CPU sets are ignored (otherwise they would be considered included in any given set).</dd>
<dd>
This function cannot work if objects at the given depth do not have CPU sets (I/O or Misc objects). </dd></dl>

</div>
</div>
<a id="gaf32c12c931955e111db73bb42921ca76" name="gaf32c12c931955e111db73bb42921ca76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf32c12c931955e111db73bb42921ca76">&#9670;&#160;</a></span>hwloc_get_obj_inside_cpuset_by_type()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00141.php#ga79b8ab56877ef99ac59b833203391c7d">hwloc_obj_t</a> hwloc_get_obj_inside_cpuset_by_type </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00142.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00139.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td>
          <td class="paramname"><em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00140.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>idx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the <code>idx</code> -th object of type <code>type</code> included in CPU set <code>set</code>. </p>
<dl class="section return"><dt>Returns</dt><dd>the object if any. </dd>
<dd>
<code>NULL</code> if there is no such object. </dd>
<dd>
<code>NULL</code> if there is no depth for given type. </dd>
<dd>
<code>NULL</code> if there are multiple depths for given type, the caller should fallback to <a class="el" href="a00152.php#ga4eded74ffab87e5ad154c817c2f9fd4c" title="Return the (logically) idx -th object at depth depth included in CPU set set.">hwloc_get_obj_inside_cpuset_by_depth()</a>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Objects with empty CPU sets are ignored (otherwise they would be considered included in any given set).</dd>
<dd>
This function cannot work if objects of the given type do not have CPU sets (I/O or Misc objects). </dd></dl>

</div>
</div>
</div><!-- contents -->
<?php
include_once("$topdir/includes/footer.inc");
